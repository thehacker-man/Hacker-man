local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "CrateFinderGUI"
screenGui.ResetOnSpawn = false
screenGui.Parent = playerGui

local openButton = Instance.new("TextButton")
openButton.Size = UDim2.new(0, 60, 0, 60)
openButton.Position = UDim2.new(0, 10, 0, 10)
openButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
openButton.Text = "M"
openButton.TextColor3 = Color3.new(1, 1, 1)
openButton.TextScaled = true
openButton.Font = Enum.Font.Gotham
openButton.Parent = screenGui

local openCorner = Instance.new("UICorner")
openCorner.CornerRadius = UDim.new(0, 8)
openCorner.Parent = openButton

local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 300, 0, 260)
mainFrame.Position = UDim2.new(0, 80, 0, 10)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Visible = false
mainFrame.Parent = screenGui

local frameCorner = Instance.new("UICorner", mainFrame)
frameCorner.CornerRadius = UDim.new(0, 10)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 40)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "Crate Finder"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = mainFrame

local crateTypes = {"Crate", "GoldCrate", "TanzaniteCrate"}
local toggles = {}
local crateCounts = {}
local enabledTypes = {}

for i, crateName in ipairs(crateTypes) do
	enabledTypes[crateName] = false

	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.65, 0, 0, 40)
	btn.Position = UDim2.new(0.05, 0, 0, 50 + (i - 1) * 50)
	btn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
	btn.Text = crateName
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.TextScaled = true
	btn.Font = Enum.Font.GothamBold
	btn.Parent = mainFrame

	local corner = Instance.new("UICorner", btn)
	corner.CornerRadius = UDim.new(0, 6)

	local countLabel = Instance.new("TextLabel")
	countLabel.Size = UDim2.new(0.25, 0, 0, 40)
	countLabel.Position = UDim2.new(0.7, 0, 0, 50 + (i - 1) * 50)
	countLabel.BackgroundTransparency = 1
	countLabel.Text = "0"
	countLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	countLabel.TextScaled = true
	countLabel.Font = Enum.Font.Gotham
	countLabel.Parent = mainFrame

	crateCounts[crateName] = countLabel

	btn.MouseButton1Click:Connect(function()
		enabledTypes[crateName] = not enabledTypes[crateName]
		if enabledTypes[crateName] then
			btn.Text = crateName
			btn.BackgroundColor3 = Color3.fromRGB(0, 160, 0)
		else
			btn.Text = crateName
			btn.BackgroundColor3 = Color3.fromRGB(120, 0, 0)
		end
	end)

	toggles[crateName] = btn
end

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0.9, 0, 0, 45)
toggleBtn.Position = UDim2.new(0.05, 0, 1, -55)
toggleBtn.BackgroundColor3 = Color3.fromRGB(180, 0, 0)
toggleBtn.Text = "OFF"
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.TextScaled = true
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.Parent = mainFrame

local toggleCorner = Instance.new("UICorner", toggleBtn)
toggleCorner.CornerRadius = UDim.new(0, 8)

local active = false
toggleBtn.MouseButton1Click:Connect(function()
	active = not active
	if active then
		toggleBtn.Text = "ON"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 160, 0)
	else
		toggleBtn.Text = "OFF"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(180, 0, 0)
	end
end)

openButton.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

local function firePrompt(prompt)
	prompt.HoldDuration = 0
	prompt.RequiresLineOfSight = false
	fireproximityprompt(prompt)
end

task.spawn(function()
	while true do
		for _, crateName in ipairs(crateTypes) do
			local count = 0
			for _, obj in ipairs(game:GetDescendants()) do
				if obj:IsA("BasePart") and obj.Name == crateName then
					count += 1
				end
			end
			if crateCounts[crateName] then
				crateCounts[crateName].Text = tostring(count)
			end
		end
		task.wait(1)
	end
end)

task.spawn(function()
	while true do
		if active then
			local char = player.Character or player.CharacterAdded:Wait()
			local hrp = char:FindFirstChild("HumanoidRootPart")
			if hrp then
				local nearest, nearestDist = nil, math.huge
				for _, obj in ipairs(game:GetDescendants()) do
					if obj:IsA("BasePart") and enabledTypes[obj.Name] then
						local dist = (hrp.Position - obj.Position).Magnitude
						if dist < nearestDist then
							local prompt = obj:FindFirstChildWhichIsA("ProximityPrompt", true)
							if prompt and prompt.Enabled then
								nearest = {part = obj, prompt = prompt}
								nearestDist = dist
							end
						end
					end
				end

				if nearest then
					hrp.CFrame = nearest.part.CFrame + Vector3.new(0, 3, 0)
					task.wait(0.3)
					firePrompt(nearest.prompt)
				end
			end
		end
		task.wait(0.5)
	end
end)
